/*
 * Katalon TestOps API reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.katalon.testops.core.web.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ExternalIssueResource
 */


public class ExternalIssueResource {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("issueId")
  private String issueId = null;

  @JsonProperty("summary")
  private String summary = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("issueTypeIcon")
  private String issueTypeIcon = null;

  @JsonProperty("issueTypeName")
  private String issueTypeName = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("featureName")
  private String featureName = null;

  @JsonProperty("testCases")
  private List<TestCaseResource> testCases = null;

  @JsonProperty("testResults")
  private List<ExecutionTestResultResource> testResults = null;

  public ExternalIssueResource id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ExternalIssueResource issueId(String issueId) {
    this.issueId = issueId;
    return this;
  }

   /**
   * Get issueId
   * @return issueId
  **/
  @Schema(description = "")
  public String getIssueId() {
    return issueId;
  }

  public void setIssueId(String issueId) {
    this.issueId = issueId;
  }

  public ExternalIssueResource summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @Schema(description = "")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public ExternalIssueResource status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ExternalIssueResource issueTypeIcon(String issueTypeIcon) {
    this.issueTypeIcon = issueTypeIcon;
    return this;
  }

   /**
   * Get issueTypeIcon
   * @return issueTypeIcon
  **/
  @Schema(description = "")
  public String getIssueTypeIcon() {
    return issueTypeIcon;
  }

  public void setIssueTypeIcon(String issueTypeIcon) {
    this.issueTypeIcon = issueTypeIcon;
  }

  public ExternalIssueResource issueTypeName(String issueTypeName) {
    this.issueTypeName = issueTypeName;
    return this;
  }

   /**
   * Get issueTypeName
   * @return issueTypeName
  **/
  @Schema(description = "")
  public String getIssueTypeName() {
    return issueTypeName;
  }

  public void setIssueTypeName(String issueTypeName) {
    this.issueTypeName = issueTypeName;
  }

  public ExternalIssueResource url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ExternalIssueResource featureName(String featureName) {
    this.featureName = featureName;
    return this;
  }

   /**
   * Get featureName
   * @return featureName
  **/
  @Schema(description = "")
  public String getFeatureName() {
    return featureName;
  }

  public void setFeatureName(String featureName) {
    this.featureName = featureName;
  }

  public ExternalIssueResource testCases(List<TestCaseResource> testCases) {
    this.testCases = testCases;
    return this;
  }

  public ExternalIssueResource addTestCasesItem(TestCaseResource testCasesItem) {
    if (this.testCases == null) {
      this.testCases = new ArrayList<TestCaseResource>();
    }
    this.testCases.add(testCasesItem);
    return this;
  }

   /**
   * Get testCases
   * @return testCases
  **/
  @Schema(description = "")
  public List<TestCaseResource> getTestCases() {
    return testCases;
  }

  public void setTestCases(List<TestCaseResource> testCases) {
    this.testCases = testCases;
  }

  public ExternalIssueResource testResults(List<ExecutionTestResultResource> testResults) {
    this.testResults = testResults;
    return this;
  }

  public ExternalIssueResource addTestResultsItem(ExecutionTestResultResource testResultsItem) {
    if (this.testResults == null) {
      this.testResults = new ArrayList<ExecutionTestResultResource>();
    }
    this.testResults.add(testResultsItem);
    return this;
  }

   /**
   * Get testResults
   * @return testResults
  **/
  @Schema(description = "")
  public List<ExecutionTestResultResource> getTestResults() {
    return testResults;
  }

  public void setTestResults(List<ExecutionTestResultResource> testResults) {
    this.testResults = testResults;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalIssueResource externalIssueResource = (ExternalIssueResource) o;
    return Objects.equals(this.id, externalIssueResource.id) &&
        Objects.equals(this.issueId, externalIssueResource.issueId) &&
        Objects.equals(this.summary, externalIssueResource.summary) &&
        Objects.equals(this.status, externalIssueResource.status) &&
        Objects.equals(this.issueTypeIcon, externalIssueResource.issueTypeIcon) &&
        Objects.equals(this.issueTypeName, externalIssueResource.issueTypeName) &&
        Objects.equals(this.url, externalIssueResource.url) &&
        Objects.equals(this.featureName, externalIssueResource.featureName) &&
        Objects.equals(this.testCases, externalIssueResource.testCases) &&
        Objects.equals(this.testResults, externalIssueResource.testResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, issueId, summary, status, issueTypeIcon, issueTypeName, url, featureName, testCases, testResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalIssueResource {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    issueId: ").append(toIndentedString(issueId)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    issueTypeIcon: ").append(toIndentedString(issueTypeIcon)).append("\n");
    sb.append("    issueTypeName: ").append(toIndentedString(issueTypeName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    featureName: ").append(toIndentedString(featureName)).append("\n");
    sb.append("    testCases: ").append(toIndentedString(testCases)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
