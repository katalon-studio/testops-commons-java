/*
 * Katalon TestOps API reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.katalon.testops.core.web.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * UserResource
 */


public class UserResource {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("invitingUrl")
  private String invitingUrl = null;

  @JsonProperty("avatar")
  private String avatar = null;

  @JsonProperty("configs")
  private ConfigResource configs = null;

  @JsonProperty("projects")
  private List<ProjectResource> projects = null;

  @JsonProperty("teams")
  private List<TeamResource> teams = null;

  @JsonProperty("organizations")
  private List<OrganizationResource> organizations = null;

  @JsonProperty("organizationFeature")
  private List<UserOrganizationFeatureResource> organizationFeature = null;

  @JsonProperty("trialExpirationDate")
  private OffsetDateTime trialExpirationDate = null;

  /**
   * Gets or Sets systemRole
   */
  public enum SystemRoleEnum {
    USER("USER"),
    KATALON_ADMIN("KATALON_ADMIN");

    private String value;

    SystemRoleEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static SystemRoleEnum fromValue(String text) {
      for (SystemRoleEnum b : SystemRoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("systemRole")
  private SystemRoleEnum systemRole = null;

  @JsonProperty("businessUser")
  private Boolean businessUser = null;

  @JsonProperty("canCreateOfflineKSE")
  private Boolean canCreateOfflineKSE = null;

  @JsonProperty("canCreateOfflineRE")
  private Boolean canCreateOfflineRE = null;

  @JsonProperty("samlSSO")
  private Boolean samlSSO = null;

  @JsonProperty("fullName")
  private String fullName = null;

  public UserResource id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public UserResource email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserResource firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @Schema(description = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UserResource lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @Schema(description = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UserResource password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public UserResource invitingUrl(String invitingUrl) {
    this.invitingUrl = invitingUrl;
    return this;
  }

   /**
   * Get invitingUrl
   * @return invitingUrl
  **/
  @Schema(description = "")
  public String getInvitingUrl() {
    return invitingUrl;
  }

  public void setInvitingUrl(String invitingUrl) {
    this.invitingUrl = invitingUrl;
  }

  public UserResource avatar(String avatar) {
    this.avatar = avatar;
    return this;
  }

   /**
   * Get avatar
   * @return avatar
  **/
  @Schema(description = "")
  public String getAvatar() {
    return avatar;
  }

  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }

  public UserResource configs(ConfigResource configs) {
    this.configs = configs;
    return this;
  }

   /**
   * Get configs
   * @return configs
  **/
  @Schema(description = "")
  public ConfigResource getConfigs() {
    return configs;
  }

  public void setConfigs(ConfigResource configs) {
    this.configs = configs;
  }

  public UserResource projects(List<ProjectResource> projects) {
    this.projects = projects;
    return this;
  }

  public UserResource addProjectsItem(ProjectResource projectsItem) {
    if (this.projects == null) {
      this.projects = new ArrayList<ProjectResource>();
    }
    this.projects.add(projectsItem);
    return this;
  }

   /**
   * Get projects
   * @return projects
  **/
  @Schema(description = "")
  public List<ProjectResource> getProjects() {
    return projects;
  }

  public void setProjects(List<ProjectResource> projects) {
    this.projects = projects;
  }

  public UserResource teams(List<TeamResource> teams) {
    this.teams = teams;
    return this;
  }

  public UserResource addTeamsItem(TeamResource teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<TeamResource>();
    }
    this.teams.add(teamsItem);
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @Schema(description = "")
  public List<TeamResource> getTeams() {
    return teams;
  }

  public void setTeams(List<TeamResource> teams) {
    this.teams = teams;
  }

  public UserResource organizations(List<OrganizationResource> organizations) {
    this.organizations = organizations;
    return this;
  }

  public UserResource addOrganizationsItem(OrganizationResource organizationsItem) {
    if (this.organizations == null) {
      this.organizations = new ArrayList<OrganizationResource>();
    }
    this.organizations.add(organizationsItem);
    return this;
  }

   /**
   * Get organizations
   * @return organizations
  **/
  @Schema(description = "")
  public List<OrganizationResource> getOrganizations() {
    return organizations;
  }

  public void setOrganizations(List<OrganizationResource> organizations) {
    this.organizations = organizations;
  }

  public UserResource organizationFeature(List<UserOrganizationFeatureResource> organizationFeature) {
    this.organizationFeature = organizationFeature;
    return this;
  }

  public UserResource addOrganizationFeatureItem(UserOrganizationFeatureResource organizationFeatureItem) {
    if (this.organizationFeature == null) {
      this.organizationFeature = new ArrayList<UserOrganizationFeatureResource>();
    }
    this.organizationFeature.add(organizationFeatureItem);
    return this;
  }

   /**
   * Get organizationFeature
   * @return organizationFeature
  **/
  @Schema(description = "")
  public List<UserOrganizationFeatureResource> getOrganizationFeature() {
    return organizationFeature;
  }

  public void setOrganizationFeature(List<UserOrganizationFeatureResource> organizationFeature) {
    this.organizationFeature = organizationFeature;
  }

  public UserResource trialExpirationDate(OffsetDateTime trialExpirationDate) {
    this.trialExpirationDate = trialExpirationDate;
    return this;
  }

   /**
   * Get trialExpirationDate
   * @return trialExpirationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getTrialExpirationDate() {
    return trialExpirationDate;
  }

  public void setTrialExpirationDate(OffsetDateTime trialExpirationDate) {
    this.trialExpirationDate = trialExpirationDate;
  }

  public UserResource systemRole(SystemRoleEnum systemRole) {
    this.systemRole = systemRole;
    return this;
  }

   /**
   * Get systemRole
   * @return systemRole
  **/
  @Schema(description = "")
  public SystemRoleEnum getSystemRole() {
    return systemRole;
  }

  public void setSystemRole(SystemRoleEnum systemRole) {
    this.systemRole = systemRole;
  }

  public UserResource businessUser(Boolean businessUser) {
    this.businessUser = businessUser;
    return this;
  }

   /**
   * Get businessUser
   * @return businessUser
  **/
  @Schema(description = "")
  public Boolean isBusinessUser() {
    return businessUser;
  }

  public void setBusinessUser(Boolean businessUser) {
    this.businessUser = businessUser;
  }

  public UserResource canCreateOfflineKSE(Boolean canCreateOfflineKSE) {
    this.canCreateOfflineKSE = canCreateOfflineKSE;
    return this;
  }

   /**
   * Get canCreateOfflineKSE
   * @return canCreateOfflineKSE
  **/
  @Schema(description = "")
  public Boolean isCanCreateOfflineKSE() {
    return canCreateOfflineKSE;
  }

  public void setCanCreateOfflineKSE(Boolean canCreateOfflineKSE) {
    this.canCreateOfflineKSE = canCreateOfflineKSE;
  }

  public UserResource canCreateOfflineRE(Boolean canCreateOfflineRE) {
    this.canCreateOfflineRE = canCreateOfflineRE;
    return this;
  }

   /**
   * Get canCreateOfflineRE
   * @return canCreateOfflineRE
  **/
  @Schema(description = "")
  public Boolean isCanCreateOfflineRE() {
    return canCreateOfflineRE;
  }

  public void setCanCreateOfflineRE(Boolean canCreateOfflineRE) {
    this.canCreateOfflineRE = canCreateOfflineRE;
  }

  public UserResource samlSSO(Boolean samlSSO) {
    this.samlSSO = samlSSO;
    return this;
  }

   /**
   * Get samlSSO
   * @return samlSSO
  **/
  @Schema(description = "")
  public Boolean isSamlSSO() {
    return samlSSO;
  }

  public void setSamlSSO(Boolean samlSSO) {
    this.samlSSO = samlSSO;
  }

  public UserResource fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @Schema(description = "")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserResource userResource = (UserResource) o;
    return Objects.equals(this.id, userResource.id) &&
        Objects.equals(this.email, userResource.email) &&
        Objects.equals(this.firstName, userResource.firstName) &&
        Objects.equals(this.lastName, userResource.lastName) &&
        Objects.equals(this.password, userResource.password) &&
        Objects.equals(this.invitingUrl, userResource.invitingUrl) &&
        Objects.equals(this.avatar, userResource.avatar) &&
        Objects.equals(this.configs, userResource.configs) &&
        Objects.equals(this.projects, userResource.projects) &&
        Objects.equals(this.teams, userResource.teams) &&
        Objects.equals(this.organizations, userResource.organizations) &&
        Objects.equals(this.organizationFeature, userResource.organizationFeature) &&
        Objects.equals(this.trialExpirationDate, userResource.trialExpirationDate) &&
        Objects.equals(this.systemRole, userResource.systemRole) &&
        Objects.equals(this.businessUser, userResource.businessUser) &&
        Objects.equals(this.canCreateOfflineKSE, userResource.canCreateOfflineKSE) &&
        Objects.equals(this.canCreateOfflineRE, userResource.canCreateOfflineRE) &&
        Objects.equals(this.samlSSO, userResource.samlSSO) &&
        Objects.equals(this.fullName, userResource.fullName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, firstName, lastName, password, invitingUrl, avatar, configs, projects, teams, organizations, organizationFeature, trialExpirationDate, systemRole, businessUser, canCreateOfflineKSE, canCreateOfflineRE, samlSSO, fullName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserResource {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    invitingUrl: ").append(toIndentedString(invitingUrl)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    configs: ").append(toIndentedString(configs)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    organizations: ").append(toIndentedString(organizations)).append("\n");
    sb.append("    organizationFeature: ").append(toIndentedString(organizationFeature)).append("\n");
    sb.append("    trialExpirationDate: ").append(toIndentedString(trialExpirationDate)).append("\n");
    sb.append("    systemRole: ").append(toIndentedString(systemRole)).append("\n");
    sb.append("    businessUser: ").append(toIndentedString(businessUser)).append("\n");
    sb.append("    canCreateOfflineKSE: ").append(toIndentedString(canCreateOfflineKSE)).append("\n");
    sb.append("    canCreateOfflineRE: ").append(toIndentedString(canCreateOfflineRE)).append("\n");
    sb.append("    samlSSO: ").append(toIndentedString(samlSSO)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
