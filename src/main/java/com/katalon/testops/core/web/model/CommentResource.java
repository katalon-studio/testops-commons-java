/*
 * Katalon TestOps API reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.katalon.testops.core.web.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * CommentResource
 */


public class CommentResource {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("objectId")
  private Long objectId = null;

  @JsonProperty("projectId")
  private Long projectId = null;

  @JsonProperty("content")
  private String content = null;

  @JsonProperty("createdAt")
  private OffsetDateTime createdAt = null;

  @JsonProperty("updatedAt")
  private OffsetDateTime updatedAt = null;

  @JsonProperty("teamId")
  private Long teamId = null;

  /**
   * Gets or Sets objectType
   */
  public enum ObjectTypeEnum {
    EXECUTION_TEST_SUITE("EXECUTION_TEST_SUITE"),
    EXECUTION_TEST_RESULT("EXECUTION_TEST_RESULT"),
    TEST_CASE("TEST_CASE"),
    INCIDENT("INCIDENT"),
    KEYES_EXECUTION("KEYES_EXECUTION");

    private String value;

    ObjectTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ObjectTypeEnum fromValue(String text) {
      for (ObjectTypeEnum b : ObjectTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("objectType")
  private ObjectTypeEnum objectType = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("displayName")
  private String displayName = null;

  @JsonProperty("displayAvatar")
  private String displayAvatar = null;

  @JsonProperty("bySystem")
  private Boolean bySystem = null;

  public CommentResource id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CommentResource objectId(Long objectId) {
    this.objectId = objectId;
    return this;
  }

   /**
   * Get objectId
   * @return objectId
  **/
  @Schema(description = "")
  public Long getObjectId() {
    return objectId;
  }

  public void setObjectId(Long objectId) {
    this.objectId = objectId;
  }

  public CommentResource projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }

  public CommentResource content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @Schema(description = "")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public CommentResource createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CommentResource updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public CommentResource teamId(Long teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @Schema(description = "")
  public Long getTeamId() {
    return teamId;
  }

  public void setTeamId(Long teamId) {
    this.teamId = teamId;
  }

  public CommentResource objectType(ObjectTypeEnum objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Get objectType
   * @return objectType
  **/
  @Schema(description = "")
  public ObjectTypeEnum getObjectType() {
    return objectType;
  }

  public void setObjectType(ObjectTypeEnum objectType) {
    this.objectType = objectType;
  }

  public CommentResource email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CommentResource displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @Schema(description = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public CommentResource displayAvatar(String displayAvatar) {
    this.displayAvatar = displayAvatar;
    return this;
  }

   /**
   * Get displayAvatar
   * @return displayAvatar
  **/
  @Schema(description = "")
  public String getDisplayAvatar() {
    return displayAvatar;
  }

  public void setDisplayAvatar(String displayAvatar) {
    this.displayAvatar = displayAvatar;
  }

  public CommentResource bySystem(Boolean bySystem) {
    this.bySystem = bySystem;
    return this;
  }

   /**
   * Get bySystem
   * @return bySystem
  **/
  @Schema(description = "")
  public Boolean isBySystem() {
    return bySystem;
  }

  public void setBySystem(Boolean bySystem) {
    this.bySystem = bySystem;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommentResource commentResource = (CommentResource) o;
    return Objects.equals(this.id, commentResource.id) &&
        Objects.equals(this.objectId, commentResource.objectId) &&
        Objects.equals(this.projectId, commentResource.projectId) &&
        Objects.equals(this.content, commentResource.content) &&
        Objects.equals(this.createdAt, commentResource.createdAt) &&
        Objects.equals(this.updatedAt, commentResource.updatedAt) &&
        Objects.equals(this.teamId, commentResource.teamId) &&
        Objects.equals(this.objectType, commentResource.objectType) &&
        Objects.equals(this.email, commentResource.email) &&
        Objects.equals(this.displayName, commentResource.displayName) &&
        Objects.equals(this.displayAvatar, commentResource.displayAvatar) &&
        Objects.equals(this.bySystem, commentResource.bySystem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, objectId, projectId, content, createdAt, updatedAt, teamId, objectType, email, displayName, displayAvatar, bySystem);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommentResource {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    displayAvatar: ").append(toIndentedString(displayAvatar)).append("\n");
    sb.append("    bySystem: ").append(toIndentedString(bySystem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
