/*
 * Katalon TestOps API reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.katalon.testops.core.web.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TimeZoneResourceOffsetRules
 */


public class TimeZoneResourceOffsetRules {
  @JsonProperty("fixedOffset")
  private Boolean fixedOffset = null;

  @JsonProperty("transitionRules")
  private List<TimeZoneResourceOffsetRulesTransitionRules> transitionRules = null;

  @JsonProperty("transitions")
  private List<TimeZoneResourceOffsetRulesTransitions> transitions = null;

  public TimeZoneResourceOffsetRules fixedOffset(Boolean fixedOffset) {
    this.fixedOffset = fixedOffset;
    return this;
  }

   /**
   * Get fixedOffset
   * @return fixedOffset
  **/
  @Schema(description = "")
  public Boolean isFixedOffset() {
    return fixedOffset;
  }

  public void setFixedOffset(Boolean fixedOffset) {
    this.fixedOffset = fixedOffset;
  }

  public TimeZoneResourceOffsetRules transitionRules(List<TimeZoneResourceOffsetRulesTransitionRules> transitionRules) {
    this.transitionRules = transitionRules;
    return this;
  }

  public TimeZoneResourceOffsetRules addTransitionRulesItem(TimeZoneResourceOffsetRulesTransitionRules transitionRulesItem) {
    if (this.transitionRules == null) {
      this.transitionRules = new ArrayList<TimeZoneResourceOffsetRulesTransitionRules>();
    }
    this.transitionRules.add(transitionRulesItem);
    return this;
  }

   /**
   * Get transitionRules
   * @return transitionRules
  **/
  @Schema(description = "")
  public List<TimeZoneResourceOffsetRulesTransitionRules> getTransitionRules() {
    return transitionRules;
  }

  public void setTransitionRules(List<TimeZoneResourceOffsetRulesTransitionRules> transitionRules) {
    this.transitionRules = transitionRules;
  }

  public TimeZoneResourceOffsetRules transitions(List<TimeZoneResourceOffsetRulesTransitions> transitions) {
    this.transitions = transitions;
    return this;
  }

  public TimeZoneResourceOffsetRules addTransitionsItem(TimeZoneResourceOffsetRulesTransitions transitionsItem) {
    if (this.transitions == null) {
      this.transitions = new ArrayList<TimeZoneResourceOffsetRulesTransitions>();
    }
    this.transitions.add(transitionsItem);
    return this;
  }

   /**
   * Get transitions
   * @return transitions
  **/
  @Schema(description = "")
  public List<TimeZoneResourceOffsetRulesTransitions> getTransitions() {
    return transitions;
  }

  public void setTransitions(List<TimeZoneResourceOffsetRulesTransitions> transitions) {
    this.transitions = transitions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeZoneResourceOffsetRules timeZoneResourceOffsetRules = (TimeZoneResourceOffsetRules) o;
    return Objects.equals(this.fixedOffset, timeZoneResourceOffsetRules.fixedOffset) &&
        Objects.equals(this.transitionRules, timeZoneResourceOffsetRules.transitionRules) &&
        Objects.equals(this.transitions, timeZoneResourceOffsetRules.transitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fixedOffset, transitionRules, transitions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeZoneResourceOffsetRules {\n");

    sb.append("    fixedOffset: ").append(toIndentedString(fixedOffset)).append("\n");
    sb.append("    transitionRules: ").append(toIndentedString(transitionRules)).append("\n");
    sb.append("    transitions: ").append(toIndentedString(transitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
