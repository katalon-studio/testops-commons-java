/*
 * Katalon TestOps API reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.katalon.testops.core.web.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * UploadBatchFileResource
 */


public class UploadBatchFileResource {
  @JsonProperty("folderPath")
  private String folderPath = null;

  @JsonProperty("end")
  private Boolean end = null;

  @JsonProperty("fileName")
  private String fileName = null;

  @JsonProperty("uploadedPath")
  private String uploadedPath = null;

  public UploadBatchFileResource folderPath(String folderPath) {
    this.folderPath = folderPath;
    return this;
  }

   /**
   * Get folderPath
   * @return folderPath
  **/
  @Schema(description = "")
  public String getFolderPath() {
    return folderPath;
  }

  public void setFolderPath(String folderPath) {
    this.folderPath = folderPath;
  }

  public UploadBatchFileResource end(Boolean end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @Schema(description = "")
  public Boolean isEnd() {
    return end;
  }

  public void setEnd(Boolean end) {
    this.end = end;
  }

  public UploadBatchFileResource fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @Schema(description = "")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public UploadBatchFileResource uploadedPath(String uploadedPath) {
    this.uploadedPath = uploadedPath;
    return this;
  }

   /**
   * Get uploadedPath
   * @return uploadedPath
  **/
  @Schema(description = "")
  public String getUploadedPath() {
    return uploadedPath;
  }

  public void setUploadedPath(String uploadedPath) {
    this.uploadedPath = uploadedPath;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadBatchFileResource uploadBatchFileResource = (UploadBatchFileResource) o;
    return Objects.equals(this.folderPath, uploadBatchFileResource.folderPath) &&
        Objects.equals(this.end, uploadBatchFileResource.end) &&
        Objects.equals(this.fileName, uploadBatchFileResource.fileName) &&
        Objects.equals(this.uploadedPath, uploadBatchFileResource.uploadedPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(folderPath, end, fileName, uploadedPath);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadBatchFileResource {\n");

    sb.append("    folderPath: ").append(toIndentedString(folderPath)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    uploadedPath: ").append(toIndentedString(uploadedPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
