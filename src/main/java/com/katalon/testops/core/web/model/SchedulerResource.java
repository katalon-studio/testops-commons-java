/*
 * Katalon TestOps API reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.katalon.testops.core.web.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * SchedulerResource
 */


public class SchedulerResource {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("startTime")
  private OffsetDateTime startTime = null;

  @JsonProperty("nextTime")
  private OffsetDateTime nextTime = null;

  @JsonProperty("endTime")
  private OffsetDateTime endTime = null;

  @JsonProperty("active")
  private Boolean active = null;

  @JsonProperty("interval")
  private Integer interval = null;

  /**
   * Gets or Sets intervalUnit
   */
  public enum IntervalUnitEnum {
    MINUTE("MINUTE"),
    HOUR("HOUR"),
    DAY("DAY"),
    WEEK("WEEK"),
    MONTH("MONTH");

    private String value;

    IntervalUnitEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static IntervalUnitEnum fromValue(String text) {
      for (IntervalUnitEnum b : IntervalUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("intervalUnit")
  private IntervalUnitEnum intervalUnit = null;

  @JsonProperty("runConfigurationId")
  private Long runConfigurationId = null;

  @JsonProperty("runConfiguration")
  private RunConfigurationResource runConfiguration = null;

  public SchedulerResource id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public SchedulerResource name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SchedulerResource startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public SchedulerResource nextTime(OffsetDateTime nextTime) {
    this.nextTime = nextTime;
    return this;
  }

   /**
   * Get nextTime
   * @return nextTime
  **/
  @Schema(description = "")
  public OffsetDateTime getNextTime() {
    return nextTime;
  }

  public void setNextTime(OffsetDateTime nextTime) {
    this.nextTime = nextTime;
  }

  public SchedulerResource endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }

  public SchedulerResource active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public SchedulerResource interval(Integer interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Get interval
   * @return interval
  **/
  @Schema(description = "")
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(Integer interval) {
    this.interval = interval;
  }

  public SchedulerResource intervalUnit(IntervalUnitEnum intervalUnit) {
    this.intervalUnit = intervalUnit;
    return this;
  }

   /**
   * Get intervalUnit
   * @return intervalUnit
  **/
  @Schema(description = "")
  public IntervalUnitEnum getIntervalUnit() {
    return intervalUnit;
  }

  public void setIntervalUnit(IntervalUnitEnum intervalUnit) {
    this.intervalUnit = intervalUnit;
  }

  public SchedulerResource runConfigurationId(Long runConfigurationId) {
    this.runConfigurationId = runConfigurationId;
    return this;
  }

   /**
   * Get runConfigurationId
   * @return runConfigurationId
  **/
  @Schema(description = "")
  public Long getRunConfigurationId() {
    return runConfigurationId;
  }

  public void setRunConfigurationId(Long runConfigurationId) {
    this.runConfigurationId = runConfigurationId;
  }

  public SchedulerResource runConfiguration(RunConfigurationResource runConfiguration) {
    this.runConfiguration = runConfiguration;
    return this;
  }

   /**
   * Get runConfiguration
   * @return runConfiguration
  **/
  @Schema(description = "")
  public RunConfigurationResource getRunConfiguration() {
    return runConfiguration;
  }

  public void setRunConfiguration(RunConfigurationResource runConfiguration) {
    this.runConfiguration = runConfiguration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchedulerResource schedulerResource = (SchedulerResource) o;
    return Objects.equals(this.id, schedulerResource.id) &&
        Objects.equals(this.name, schedulerResource.name) &&
        Objects.equals(this.startTime, schedulerResource.startTime) &&
        Objects.equals(this.nextTime, schedulerResource.nextTime) &&
        Objects.equals(this.endTime, schedulerResource.endTime) &&
        Objects.equals(this.active, schedulerResource.active) &&
        Objects.equals(this.interval, schedulerResource.interval) &&
        Objects.equals(this.intervalUnit, schedulerResource.intervalUnit) &&
        Objects.equals(this.runConfigurationId, schedulerResource.runConfigurationId) &&
        Objects.equals(this.runConfiguration, schedulerResource.runConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, startTime, nextTime, endTime, active, interval, intervalUnit, runConfigurationId, runConfiguration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchedulerResource {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    nextTime: ").append(toIndentedString(nextTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    intervalUnit: ").append(toIndentedString(intervalUnit)).append("\n");
    sb.append("    runConfigurationId: ").append(toIndentedString(runConfigurationId)).append("\n");
    sb.append("    runConfiguration: ").append(toIndentedString(runConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
