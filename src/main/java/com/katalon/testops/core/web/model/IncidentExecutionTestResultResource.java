/*
 * Katalon TestOps API reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.katalon.testops.core.web.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * IncidentExecutionTestResultResource
 */


public class IncidentExecutionTestResultResource {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("incidentId")
  private Long incidentId = null;

  @JsonProperty("projectId")
  private Long projectId = null;

  @JsonProperty("incidentOrder")
  private Long incidentOrder = null;

  @JsonProperty("executionTestResultId")
  private Long executionTestResultId = null;

  public IncidentExecutionTestResultResource id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public IncidentExecutionTestResultResource incidentId(Long incidentId) {
    this.incidentId = incidentId;
    return this;
  }

   /**
   * Get incidentId
   * @return incidentId
  **/
  @Schema(description = "")
  public Long getIncidentId() {
    return incidentId;
  }

  public void setIncidentId(Long incidentId) {
    this.incidentId = incidentId;
  }

  public IncidentExecutionTestResultResource projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }

  public IncidentExecutionTestResultResource incidentOrder(Long incidentOrder) {
    this.incidentOrder = incidentOrder;
    return this;
  }

   /**
   * Get incidentOrder
   * @return incidentOrder
  **/
  @Schema(description = "")
  public Long getIncidentOrder() {
    return incidentOrder;
  }

  public void setIncidentOrder(Long incidentOrder) {
    this.incidentOrder = incidentOrder;
  }

  public IncidentExecutionTestResultResource executionTestResultId(Long executionTestResultId) {
    this.executionTestResultId = executionTestResultId;
    return this;
  }

   /**
   * Get executionTestResultId
   * @return executionTestResultId
  **/
  @Schema(description = "")
  public Long getExecutionTestResultId() {
    return executionTestResultId;
  }

  public void setExecutionTestResultId(Long executionTestResultId) {
    this.executionTestResultId = executionTestResultId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IncidentExecutionTestResultResource incidentExecutionTestResultResource = (IncidentExecutionTestResultResource) o;
    return Objects.equals(this.id, incidentExecutionTestResultResource.id) &&
        Objects.equals(this.incidentId, incidentExecutionTestResultResource.incidentId) &&
        Objects.equals(this.projectId, incidentExecutionTestResultResource.projectId) &&
        Objects.equals(this.incidentOrder, incidentExecutionTestResultResource.incidentOrder) &&
        Objects.equals(this.executionTestResultId, incidentExecutionTestResultResource.executionTestResultId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, incidentId, projectId, incidentOrder, executionTestResultId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IncidentExecutionTestResultResource {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    incidentId: ").append(toIndentedString(incidentId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    incidentOrder: ").append(toIndentedString(incidentOrder)).append("\n");
    sb.append("    executionTestResultId: ").append(toIndentedString(executionTestResultId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
