/*
 * Katalon TestOps API reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.katalon.testops.core.web.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * TestCasePlatformStatisticsResource
 */


public class TestCasePlatformStatisticsResource {
  @JsonProperty("totalTests")
  private Long totalTests = null;

  @JsonProperty("totalPassedTests")
  private Long totalPassedTests = null;

  @JsonProperty("totalFailedTests")
  private Long totalFailedTests = null;

  @JsonProperty("totalErrorTests")
  private Long totalErrorTests = null;

  @JsonProperty("totalIncompleteTests")
  private Long totalIncompleteTests = null;

  @JsonProperty("platform")
  private PlatformResource platform = null;

  @JsonProperty("platformId")
  private Long platformId = null;

  public TestCasePlatformStatisticsResource totalTests(Long totalTests) {
    this.totalTests = totalTests;
    return this;
  }

   /**
   * Get totalTests
   * @return totalTests
  **/
  @Schema(description = "")
  public Long getTotalTests() {
    return totalTests;
  }

  public void setTotalTests(Long totalTests) {
    this.totalTests = totalTests;
  }

  public TestCasePlatformStatisticsResource totalPassedTests(Long totalPassedTests) {
    this.totalPassedTests = totalPassedTests;
    return this;
  }

   /**
   * Get totalPassedTests
   * @return totalPassedTests
  **/
  @Schema(description = "")
  public Long getTotalPassedTests() {
    return totalPassedTests;
  }

  public void setTotalPassedTests(Long totalPassedTests) {
    this.totalPassedTests = totalPassedTests;
  }

  public TestCasePlatformStatisticsResource totalFailedTests(Long totalFailedTests) {
    this.totalFailedTests = totalFailedTests;
    return this;
  }

   /**
   * Get totalFailedTests
   * @return totalFailedTests
  **/
  @Schema(description = "")
  public Long getTotalFailedTests() {
    return totalFailedTests;
  }

  public void setTotalFailedTests(Long totalFailedTests) {
    this.totalFailedTests = totalFailedTests;
  }

  public TestCasePlatformStatisticsResource totalErrorTests(Long totalErrorTests) {
    this.totalErrorTests = totalErrorTests;
    return this;
  }

   /**
   * Get totalErrorTests
   * @return totalErrorTests
  **/
  @Schema(description = "")
  public Long getTotalErrorTests() {
    return totalErrorTests;
  }

  public void setTotalErrorTests(Long totalErrorTests) {
    this.totalErrorTests = totalErrorTests;
  }

  public TestCasePlatformStatisticsResource totalIncompleteTests(Long totalIncompleteTests) {
    this.totalIncompleteTests = totalIncompleteTests;
    return this;
  }

   /**
   * Get totalIncompleteTests
   * @return totalIncompleteTests
  **/
  @Schema(description = "")
  public Long getTotalIncompleteTests() {
    return totalIncompleteTests;
  }

  public void setTotalIncompleteTests(Long totalIncompleteTests) {
    this.totalIncompleteTests = totalIncompleteTests;
  }

  public TestCasePlatformStatisticsResource platform(PlatformResource platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @Schema(description = "")
  public PlatformResource getPlatform() {
    return platform;
  }

  public void setPlatform(PlatformResource platform) {
    this.platform = platform;
  }

  public TestCasePlatformStatisticsResource platformId(Long platformId) {
    this.platformId = platformId;
    return this;
  }

   /**
   * Get platformId
   * @return platformId
  **/
  @Schema(description = "")
  public Long getPlatformId() {
    return platformId;
  }

  public void setPlatformId(Long platformId) {
    this.platformId = platformId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestCasePlatformStatisticsResource testCasePlatformStatisticsResource = (TestCasePlatformStatisticsResource) o;
    return Objects.equals(this.totalTests, testCasePlatformStatisticsResource.totalTests) &&
        Objects.equals(this.totalPassedTests, testCasePlatformStatisticsResource.totalPassedTests) &&
        Objects.equals(this.totalFailedTests, testCasePlatformStatisticsResource.totalFailedTests) &&
        Objects.equals(this.totalErrorTests, testCasePlatformStatisticsResource.totalErrorTests) &&
        Objects.equals(this.totalIncompleteTests, testCasePlatformStatisticsResource.totalIncompleteTests) &&
        Objects.equals(this.platform, testCasePlatformStatisticsResource.platform) &&
        Objects.equals(this.platformId, testCasePlatformStatisticsResource.platformId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalTests, totalPassedTests, totalFailedTests, totalErrorTests, totalIncompleteTests, platform, platformId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestCasePlatformStatisticsResource {\n");

    sb.append("    totalTests: ").append(toIndentedString(totalTests)).append("\n");
    sb.append("    totalPassedTests: ").append(toIndentedString(totalPassedTests)).append("\n");
    sb.append("    totalFailedTests: ").append(toIndentedString(totalFailedTests)).append("\n");
    sb.append("    totalErrorTests: ").append(toIndentedString(totalErrorTests)).append("\n");
    sb.append("    totalIncompleteTests: ").append(toIndentedString(totalIncompleteTests)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    platformId: ").append(toIndentedString(platformId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
